/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package index;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author barbaromatrix
 */
public class SRT extends javax.swing.JFrame {
    
    private static final long serialVersionUID = 1L;
    
    ArrayList iTime, iArrive;
    int iCurTime, iIndex, iTotalTime;
    Timer timer;
    ActionListener al;
    boolean flag;

    public SRT() {
        initComponents();

        iArrive = new ArrayList();
        iTime = new ArrayList();
        iCurTime = 0;
        iTotalTime = 0;
        flag = false;
        
        btn_gerar_graficos.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_pai = new javax.swing.JPanel();
        pnl_formulario = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_chegada = new javax.swing.JTextField();
        txt_duracao = new javax.swing.JTextField();
        btn_adicionar = new javax.swing.JButton();
        btn_limpar = new javax.swing.JButton();
        btn_iniciar = new javax.swing.JButton();
        btn_gerar_graficos = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_processos = new javax.swing.JTable();
        lbl_informa_processo_atual = new javax.swing.JLabel();
        lbl_informa_tempo_restante = new javax.swing.JLabel();
        lbl_informa_tempo_atual = new javax.swing.JLabel();
        lbl_processo_atual = new javax.swing.JLabel();
        lbl_tempo_restante = new javax.swing.JLabel();
        lbl_tempo_atual = new javax.swing.JLabel();
        pgb_progresso_processo = new javax.swing.JProgressBar();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        lbl_informa_porcentagem = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador de escalonamento SRT");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel1.setText("Tempo de chegada");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel2.setText("Tempo de duração");

        txt_chegada.setFont(new java.awt.Font("Comic Sans MS", 0, 15)); // NOI18N
        txt_chegada.setToolTipText("Tempo de chegada (em segundos)");
        txt_chegada.setNextFocusableComponent(txt_duracao);

        txt_duracao.setFont(new java.awt.Font("Comic Sans MS", 0, 15)); // NOI18N
        txt_duracao.setToolTipText("Tempo de duraçao (em segundos)");
        txt_duracao.setNextFocusableComponent(btn_adicionar);

        btn_adicionar.setFont(new java.awt.Font("Comic Sans MS", 0, 15)); // NOI18N
        btn_adicionar.setText("Adicionar");
        btn_adicionar.setToolTipText("Adicionar na tabela de processos");
        btn_adicionar.setNextFocusableComponent(btn_limpar);
        btn_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adicionarActionPerformed(evt);
            }
        });

        btn_limpar.setFont(new java.awt.Font("Comic Sans MS", 0, 15)); // NOI18N
        btn_limpar.setText("Limpar");
        btn_limpar.setToolTipText("Limpar valores da tabela de processos");
        btn_limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limparActionPerformed(evt);
            }
        });

        btn_iniciar.setFont(new java.awt.Font("Comic Sans MS", 0, 15)); // NOI18N
        btn_iniciar.setText("Iniciar");
        btn_iniciar.setToolTipText("Iniciar escalonamento");
        btn_iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_iniciarActionPerformed(evt);
            }
        });

        btn_gerar_graficos.setFont(new java.awt.Font("Comic Sans MS", 0, 15)); // NOI18N
        btn_gerar_graficos.setText("Gerar gráficos");
        btn_gerar_graficos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gerar_graficosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_formularioLayout = new javax.swing.GroupLayout(pnl_formulario);
        pnl_formulario.setLayout(pnl_formularioLayout);
        pnl_formularioLayout.setHorizontalGroup(
            pnl_formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_formularioLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnl_formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnl_formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_chegada, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_duracao, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(pnl_formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_formularioLayout.createSequentialGroup()
                        .addComponent(btn_adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_iniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnl_formularioLayout.createSequentialGroup()
                        .addComponent(btn_limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_gerar_graficos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnl_formularioLayout.setVerticalGroup(
            pnl_formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_formularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_chegada)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_adicionar)
                    .addComponent(btn_iniciar))
                .addGap(17, 17, 17)
                .addGroup(pnl_formularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_duracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btn_limpar)
                    .addComponent(btn_gerar_graficos))
                .addContainerGap())
        );

        tbl_processos.setAutoCreateRowSorter(true);
        tbl_processos.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        tbl_processos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Processo", "Duração", "Chegada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_processos.setToolTipText("Valores dos processos");
        jScrollPane1.setViewportView(tbl_processos);

        lbl_informa_processo_atual.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lbl_informa_processo_atual.setText("Processo atual: ");
        lbl_informa_processo_atual.setToolTipText("");

        lbl_informa_tempo_restante.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lbl_informa_tempo_restante.setText("Tempo restante:");

        lbl_informa_tempo_atual.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lbl_informa_tempo_atual.setText("Tempo atual:");

        lbl_processo_atual.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lbl_processo_atual.setText("Sem processo.");
        lbl_processo_atual.setToolTipText("Número do processo atual");

        lbl_tempo_restante.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lbl_tempo_restante.setText("0");
        lbl_tempo_restante.setToolTipText("Tempo restante de processamento do processo atual");

        lbl_tempo_atual.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lbl_tempo_atual.setText("0");
        lbl_tempo_atual.setToolTipText("Tempo atual do processo atual");

        pgb_progresso_processo.setStringPainted(true);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel3.setText("Informações dos processos");

        lbl_informa_porcentagem.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        lbl_informa_porcentagem.setText("Status de processamento");
        lbl_informa_porcentagem.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_informa_processo_atual)
                                    .addComponent(lbl_informa_tempo_restante)
                                    .addComponent(lbl_informa_tempo_atual))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_tempo_atual)
                                    .addComponent(lbl_processo_atual)
                                    .addComponent(lbl_tempo_restante)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(pgb_progresso_processo, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(lbl_informa_porcentagem)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_informa_processo_atual)
                            .addComponent(lbl_processo_atual))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_informa_tempo_atual)
                            .addComponent(lbl_tempo_atual))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_informa_tempo_restante)
                            .addComponent(lbl_tempo_restante))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_informa_porcentagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pgb_progresso_processo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lbl_informa_processo_atual, lbl_informa_tempo_atual, lbl_informa_tempo_restante});

        javax.swing.GroupLayout pnl_paiLayout = new javax.swing.GroupLayout(pnl_pai);
        pnl_pai.setLayout(pnl_paiLayout);
        pnl_paiLayout.setHorizontalGroup(
            pnl_paiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_formulario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnl_paiLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_paiLayout.setVerticalGroup(
            pnl_paiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_paiLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(pnl_formulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu2.setBackground(java.awt.Color.black);
        jMenu2.setText("Ajuda");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem2.setFont(new java.awt.Font("Comic Sans MS", 0, 15)); // NOI18N
        jMenuItem2.setText("Desenvolvedores");
        jMenuItem2.setToolTipText("Responsáveis pelo desenvolvimento");
        jMenu2.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem3.setFont(new java.awt.Font("Comic Sans MS", 0, 15)); // NOI18N
        jMenuItem3.setText("Versão");
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_pai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_pai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_iniciarActionPerformed
        if (!flag) {
            flag = true;
        }

        if (btn_gerar_graficos.isEnabled()) {
            btn_gerar_graficos.setEnabled(false);
        }
        al = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                // Faz processo
                if (iCurTime < iTotalTime) {
                    iIndex = -1;
                    for (int i = 0; i < tbl_processos.getRowCount(); i++) {
                        if (Integer.parseInt(String.valueOf(iTime.get(i))) > 0 && iCurTime >= Integer.parseInt(String.valueOf(iArrive.get(i)))) {
                            if (iIndex >= 0) {
                                if (Integer.parseInt(String.valueOf(iTime.get(iIndex))) > Integer.parseInt(String.valueOf(iTime.get(i)))) {
                                    iIndex = i;
                                } else if (Integer.parseInt(String.valueOf(iTime.get(iIndex))) == Integer.parseInt(String.valueOf(iTime.get(i)))) {
                                    if (iIndex > i) {
                                        i = iIndex;
                                    }
                                }
                            } else {
                                iIndex = i;
                            }
                        }
                    }

                    if (iIndex >= 0) {
                        int var = Integer.parseInt(String.valueOf(iTime.get(iIndex))) - 1;
                        iTime.set(iIndex, var);

                        lbl_processo_atual.setText(String.valueOf(iIndex + 1));
                        lbl_tempo_atual.setText(String.valueOf(iCurTime + 1));
                        lbl_tempo_restante.setText(String.valueOf(iTime.get(iIndex)));

                        try {
                            int progresso = (int) (Double.valueOf(String.valueOf(iCurTime + 1)) / Double.valueOf(String.valueOf(iTotalTime)) * 100);
                            pgb_progresso_processo.setValue(progresso);

                        } catch (Exception ex) {
                            System.out.println(ex.getMessage());
                        }

                    } else {
                        lbl_processo_atual.setText("Sem processo.");
                        lbl_tempo_atual.setText(String.valueOf(iCurTime + 1));
                        lbl_tempo_restante.setText("0");
                        iTotalTime++;
                    }
                    iCurTime++;
                } else {
                    JOptionPane.showMessageDialog(null, "O Escalonamento foi finalizado.");
                    timer.stop();
                    btn_gerar_graficos.setEnabled(true);
                    txt_chegada.setEnabled(true);
                    txt_duracao.setEnabled(true);

                    btn_adicionar.setEnabled(true);
                    btn_limpar.setEnabled(true);
                    btn_iniciar.setEnabled(true);

                    txt_chegada.setText("");
                    txt_duracao.setText("");
                    iArrive.removeAll(iArrive);
                    iTime.removeAll(iTime);
                    iCurTime = 0;
                    iTotalTime = 0;

                    lbl_processo_atual.setText("Sem processo.");
                    lbl_tempo_atual.setText("0");
                    lbl_tempo_restante.setText("0");

                    pgb_progresso_processo.setValue(0);
                }
            }
        };

        // Desabilita campos e botoes de adicionar novos processos e inicia o processo
        if (tbl_processos.getRowCount() > 0) {
            txt_chegada.setEnabled(false);
            txt_duracao.setEnabled(false);

            btn_adicionar.setEnabled(false);
            btn_limpar.setEnabled(false);
            btn_iniciar.setEnabled(false);

            timer = new Timer(1000, al);
            timer.start();
        } else {
            JOptionPane.showMessageDialog(null, "Deve haver pelo menos um processo para iniciar.");
        }
    }//GEN-LAST:event_btn_iniciarActionPerformed

    private void btn_gerar_graficosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gerar_graficosActionPerformed
        System.out.println(Integer.parseInt(String.valueOf(iTime.get(0))));
    }//GEN-LAST:event_btn_gerar_graficosActionPerformed

    private void btn_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adicionarActionPerformed
        if (flag) {
            ((DefaultTableModel) tbl_processos.getModel()).setNumRows(0);
            flag = false;
        }

        if ("".equals(txt_chegada.getText())) {
            if (txt_chegada.getText().length() > 0 && Integer.parseInt(txt_chegada.getText()) <= 0) {
                JOptionPane.showMessageDialog(null, "O tempo de chegada não pode ser menor ou igual a 0.");
            } else {
                JOptionPane.showMessageDialog(null, "O tempo de chegada não pode ser vazio.");
            }
        } else if ("".equals(txt_duracao.getText())) {
            if (txt_duracao.getText().length() > 0 && Integer.parseInt(txt_duracao.getText()) <= 0) {
                JOptionPane.showMessageDialog(null, "O tempo de duração não pode ser menor ou igual a 0.");
            } else {
                JOptionPane.showMessageDialog(null, "O tempo de duração não pode ser vazio.");
            }
        } else {
            int i = tbl_processos.getRowCount();
            ((DefaultTableModel) tbl_processos.getModel()).addRow(new Object[]{++i, txt_duracao.getText(), txt_chegada.getText()});

            iArrive.add(Integer.parseInt(txt_chegada.getText()));
            iTime.add(Integer.parseInt(txt_duracao.getText()));
            iTotalTime += Integer.parseInt(txt_duracao.getText());

            txt_chegada.setText("");
            txt_duracao.setText("");
        }

        txt_chegada.requestFocus();
    }//GEN-LAST:event_btn_adicionarActionPerformed

    private void btn_limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limparActionPerformed
        txt_chegada.setText("");
        txt_duracao.setText("");
        ((DefaultTableModel) tbl_processos.getModel()).setNumRows(0);
        iArrive.removeAll(iArrive);
        iTime.removeAll(iTime);
        iTotalTime = 0;

        txt_chegada.requestFocus();
    }//GEN-LAST:event_btn_limparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SRT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SRT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SRT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SRT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SRT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_adicionar;
    private javax.swing.JButton btn_gerar_graficos;
    private javax.swing.JButton btn_iniciar;
    private javax.swing.JButton btn_limpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_informa_porcentagem;
    private javax.swing.JLabel lbl_informa_processo_atual;
    private javax.swing.JLabel lbl_informa_tempo_atual;
    private javax.swing.JLabel lbl_informa_tempo_restante;
    private javax.swing.JLabel lbl_processo_atual;
    private javax.swing.JLabel lbl_tempo_atual;
    private javax.swing.JLabel lbl_tempo_restante;
    private javax.swing.JProgressBar pgb_progresso_processo;
    private javax.swing.JPanel pnl_formulario;
    private javax.swing.JPanel pnl_pai;
    private javax.swing.JTable tbl_processos;
    private javax.swing.JTextField txt_chegada;
    private javax.swing.JTextField txt_duracao;
    // End of variables declaration//GEN-END:variables
}
